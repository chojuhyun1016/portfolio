[versions]
java = "17"
springBoot = "3.2.5"
springDepMgmt = "1.1.4"
springCloud = "2023.0.1"
springAws = "3.1.1"
querydsl = "5.0.0"

guava = "32.1.2-jre"
tsid = "5.2.6"
jacksonJsr310 = "2.17.2"
mysqlDriver = "8.3.0"
awsMysqlJdbc = "1.1.14"
lombok = "1.18.32"

testcontainersBom = "1.19.7"

# ✅ embedded-redis 버전 고정 (codemonstur)
embeddedRedis = "1.4.3"

mariaDB4j = "2.5.3"
mariadbDriver = "3.3.3"
dynamodbLocal = "1.21.0"
sqlite4javaCore = "1.0.392"
h2 = "2.2.224"

[plugins]
springBoot = { id = "org.springframework.boot", version.ref = "springBoot" }
springDepMgmt = { id = "io.spring.dependency-management", version.ref = "springDepMgmt" }
asciidoctor = { id = "org.asciidoctor.jvm.convert", version = "3.3.2" }

[libraries]
lombok = { module = "org.projectlombok:lombok", version.ref = "lombok" }
springBootStarter = { module = "org.springframework.boot:spring-boot-starter" }
springBootStarterWeb = { module = "org.springframework.boot:spring-boot-starter-web" }
springBootStarterAop = { module = "org.springframework.boot:spring-boot-starter-aop" }
springBootStarterJdbc = { module = "org.springframework.boot:spring-boot-starter-jdbc" }
springBootStarterDataJpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa" }
springBootStarterValidation = { module = "org.springframework.boot:spring-boot-starter-validation" }
springBootStarterSecurity = { module = "org.springframework.boot:spring-boot-starter-security" }

# ✅ RedisTemplate 자동설정용 스타터 (추가)
springBootStarterDataRedis = { module = "org.springframework.boot:spring-boot-starter-data-redis" }

springCloudGateway = { module = "org.springframework.cloud:spring-cloud-starter-gateway" }
springBootStarterTest = { module = "org.springframework.boot:spring-boot-starter-test" }

mysqlDriver = { module = "com.mysql:mysql-connector-j", version.ref = "mysqlDriver" }
awsMysqlJdbc = { module = "software.aws.rds:aws-mysql-jdbc", version.ref = "awsMysqlJdbc" }

awsBomV2 = { module = "software.amazon.awssdk:bom", version = "2.25.10" }
awsSecretsManager = { module = "software.amazon.awssdk:secretsmanager" }
awsAuth = { module = "software.amazon.awssdk:auth" }
awsRegions = { module = "software.amazon.awssdk:regions" }
awsDynamodb = { module = "software.amazon.awssdk:dynamodb" }
awsDynamodbEnhanced = { module = "software.amazon.awssdk:dynamodb-enhanced" }

querydslCore = { module = "com.querydsl:querydsl-core", version.ref = "querydsl" }
querydslJpaJakarta = { module = "com.querydsl:querydsl-jpa", version.ref = "querydsl" }
querydslAptJakarta = { module = "com.querydsl:querydsl-apt", version.ref = "querydsl" }

jakartaPersistenceApi = { module = "jakarta.persistence:jakarta.persistence-api", version = "3.1.0" }
jakartaAnnotationApi = { module = "jakarta.annotation:jakarta.annotation-api", version = "2.1.1" }

jjwtApi = { module = "io.jsonwebtoken:jjwt-api", version = "0.11.5" }
jjwtImpl = { module = "io.jsonwebtoken:jjwt-impl", version = "0.11.5" }
jjwtJackson = { module = "io.jsonwebtoken:jjwt-jackson", version = "0.11.5" }

guava = { module = "com.google.guava:guava", version.ref = "guava" }
tsid = { module = "com.github.f4b6a3:tsid-creator", version.ref = "tsid" }
jacksonJsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jacksonJsr310" }
commonsPool2 = { module = "org.apache.commons:commons-pool2", version = "2.12.0" }
jakartaServlet = { module = "jakarta.servlet:jakarta.servlet-api", version = "6.0.0" }
argon2 = { module = "de.mkammerer:argon2-jvm", version = "2.11" }

redisson = { module = "org.redisson:redisson-spring-boot-starter", version = "3.27.2" }
lettuce = { module = "io.lettuce:lettuce-core", version = "6.3.2.RELEASE" }

# ✅ 그룹/버전 정확히 지정
embeddedRedis = { module = "com.github.codemonstur:embedded-redis", version.ref = "embeddedRedis" }  # ✅ 그룹ID 정확

mariaDB4j = { module = "ch.vorburger.mariaDB4j:mariaDB4j", version.ref = "mariaDB4j" }
dynamodbLocal = { module = "com.amazonaws:DynamoDBLocal", version.ref = "dynamodbLocal" }
sqlite4javaCore = { module = "com.almworks.sqlite4java:sqlite4java", version.ref = "sqlite4javaCore" }

testcontainers = { module = "org.testcontainers:testcontainers" }
testcontainersJunit = { module = "org.testcontainers:junit-jupiter" }
testcontainersRedis = { module = "org.testcontainers:redis" }

h2 = { module = "com.h2database:h2", version.ref = "h2" }
