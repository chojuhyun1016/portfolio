# ============================================================================
# application-kafka-dev.yml
#  - DEV 환경: MSK + IAM 인증 전제 (SASL_SSL)
#  - producer/consumer ON/OFF 스위치 제공 (구성 클래스에 Conditional 붙여두면 사용)
#  - 기존 키 구조 유지
# ============================================================================

kafka:
  # ------------------------------------------------------------------------
  # SSL/SASL (DEV: MSK/IAM 사용 가정)
  #  - enabled=true: 보안 채널 활성화
  #  - 아래 값들은 MSK/IAM 표준 세팅. 계정/권한은 인프라에서 관리
  # ------------------------------------------------------------------------
  ssl:
    enabled: true
    security-protocol: SASL_SSL
    sasl-mechanism: AWS_MSK_IAM
    sasl-jaas-config: software.amazon.msk.auth.iam.IAMLoginModule required;
    sasl-client-callback-handler-class: software.amazon.msk.auth.iam.IAMClientCallbackHandler

  # ------------------------------------------------------------------------
  # 프로듀서
  #  - enabled 스위치는 구성 클래스에서 @ConditionalOnProperty 로 제어할 때 사용
  #  - 부트스트랩 서버는 환경변수로 주입 (예: a.b.c.d:9098,...)
  #  - 추가 세부 튜닝은 코드에서 바인딩 확장 (acks, linger.ms, batch.size 등)
  # ------------------------------------------------------------------------
  producer:
    enabled: true                                # ✨ 필요 시 꺼도 됨 (false)
    bootstrap-servers: "${BOOTSTRAP_SERVERS}"    # 예) b-1.msk.dev:9098,b-2.msk.dev:9098

  # ------------------------------------------------------------------------
  # 토픽 매핑
  #  - 도메인별 DEV 토픽 이름
  #  - region 세분화가 필요하면 항목에 regionCode 필드 추가 가능
  # ------------------------------------------------------------------------
  topic:
    - category: order-local
      name: "dev-order-local"
    - category: order-api
      name: "dev-order-api"
    - category: order-crud
      name: "dev-order-crud"
    - category: order-remote
      name: "dev-order-remote"

  # ------------------------------------------------------------------------
  # 컨슈머
  #  - enabled 스위치로 ListenerContainerFactory 생성 여부 제어 가능
  #  - auto-offset-reset=earliest: 신규 그룹은 처음부터 읽기 시작
  #  - enable-auto-commit=false: MANUAL_IMMEDIATE ack 정책과 일치
  #  - (중요) 그룹ID는 @KafkaListener나 코드에서 지정 권장
  # ------------------------------------------------------------------------
  consumer:
    enabled: true                                # ✨ 필요 시 끄기 가능
    bootstrap-servers: "${BOOTSTRAP_SERVERS}"

    option:
      max-fail-count: 1
      max-poll-records: 1000
      fetch-max-wait-ms: 500
      fetch-max-bytes: 52428800                  # 50 MiB
      max-poll-interval-ms: 300000               # 5분
      idle-between-polls: 0
      auto-offset-reset: "earliest"
      enable-auto-commit: false                  # 수동 커밋(ack.acknowledge()) 전제

  # ------------------------------------------------------------------------
  # (참고) 그룹/클라이언트ID 설정 위치
  #  - 현재 프로젝트는 커스텀 팩토리(DefaultKafkaConsumerFactory)로 설정하므로
  #    ConsumerConfig.GROUP_ID_CONFIG, CLIENT_ID_CONFIG를 코드에서 바인딩하는 방식 권장
  #  - 필요 시 properties 객체에 필드 추가 후 getDefaultConfigProps()에서 put 하면 됨
  # ------------------------------------------------------------------------
  # example-only (주석): 코드 바인딩 확장 시 사용
  # consumer:
  #   group-id: "dev-order-service"
  #   client-id: "dev-order-service-1"
