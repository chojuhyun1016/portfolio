// ============================================================================
// order-client/kafka/build.gradle
//  - 라이브러리 모듈: Spring Boot 플러그인 미적용 (bootJar 없음)
//  - 표준 JAR 산출 (jar 활성화)
//  - 의존성은 모두 libs.versions.toml 별칭 사용
//  - jakarta.validation.* 오류 방지를 위해 validation starter 명시
// ============================================================================

plugins {
    id 'java-library'                         // ✅ 라이브러리 모듈 (부트 플러그인 X)
    id 'io.spring.dependency-management'      // ✅ 상위 BOM 버전 정렬 (루트에서도 적용 중이어도 중복 무해)
}

group = 'org.example.order'
version = '1.0.0'

java {
    toolchain { languageVersion = JavaLanguageVersion.of(17) }
    withSourcesJar()
    withJavadocJar()
}

// repositories 는 루트 설정 사용 (여기서 중복 선언하지 않음)

dependencies {
    // 공통 모듈
    api project(':order-common')              // 다른 모듈이 kafka 모듈을 의존할 때 재노출 필요하면 api 사용
    implementation project(':order-core')

    // Kafka (✅ alias)
    implementation(libs.springKafka)

    // Jackson (Java 8 Date/Time 지원; ✅ alias)
    implementation(libs.jacksonJsr310)

    // ✅ Bean Validation(@NotBlank 등) — properties 바인딩 시 필요
    implementation(libs.springBootStarterValidation)

    // 테스트
    testImplementation(libs.springBootStarterTest)
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
    testLogging {
        events "FAILED", "SKIPPED"
        exceptionFormat "FULL"
    }
}

// ----------------------------------------------------------------------------
// 패키징
//  - 부트 플러그인이 없다면 bootJar 태스크가 존재하지 않으므로 접근하지 않는다.
//  - 누군가 나중에 부트 플러그인을 붙여도 깨지지 않도록 "존재할 때만" 비활성화.
// ----------------------------------------------------------------------------
tasks.matching { it.name == 'bootJar' }.configureEach {
    enabled = false
}

tasks.named('jar') {
    enabled = true
}
