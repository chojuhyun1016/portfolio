// ============================================================================
// order-client/kafka/build.gradle
//
// 주요 포인트:
// - 라이브러리 모듈 (bootJar 비활성, jar 활성)
// - integrationTest 소스셋/태스크 정의 (이미 있으면 재등록하지 않고 보강만)
// - Kafka 관련 테스트를 위해 spring-kafka-test 포함
// - libs.versions.toml 별칭 기반으로만 의존성 선언
// ============================================================================

plugins {
    id 'java-library'                         // 라이브러리 모듈
    id 'io.spring.dependency-management'      // BOM 정렬
}

group = 'org.example.order'
version = '1.0.0'

java {
    toolchain { languageVersion = JavaLanguageVersion.of(17) }
    withSourcesJar()
    withJavadocJar()
}

// integrationTest 소스셋/구성 정의 (있으면 보강만)
def hasItSourceSet = sourceSets.findByName('integrationTest') != null
def hasItImplConf = configurations.findByName('integrationTestImplementation') != null
def hasItRtConf = configurations.findByName('integrationTestRuntimeClasspath') != null

if (!hasItSourceSet) {
    sourceSets {
        integrationTest {
            java.srcDir file('src/integrationTest/java')
            resources.srcDir file('src/integrationTest/resources')
            compileClasspath += sourceSets.main.output + configurations.integrationTestImplementation
            runtimeClasspath += output + compileClasspath + configurations.integrationTestRuntimeClasspath
        }
    }
} else {
    sourceSets.named('integrationTest').configure {
        java.srcDir file('src/integrationTest/java')
        resources.srcDir file('src/integrationTest/resources')
    }
}

if (!hasItImplConf || !hasItRtConf) {
    configurations {
        integrationTestImplementation {
            extendsFrom testImplementation
        }
        integrationTestRuntimeClasspath {
            extendsFrom testRuntimeClasspath
        }
    }
}

// 의존성
dependencies {
    // 공통 모듈
    implementation project(':order-common')
    implementation project(':order-core')

    // Kafka
    implementation(libs.springKafka)

    // Jackson (JavaTime 지원)
    implementation(libs.jacksonJsr310)

    // Validation
    implementation(libs.springBootStarterValidation)

    // --- 단위 테스트 ---
    testImplementation(libs.springBootStarterTest)
    testImplementation(libs.springKafkaTest)

    // --- 통합 테스트 ---
    integrationTestImplementation(libs.springBootStarterTest)
    integrationTestImplementation(libs.springKafkaTest)
}

// Test 태스크 공통 설정
tasks.withType(Test).configureEach {
    useJUnitPlatform()
    testLogging {
        events "FAILED", "SKIPPED"
        exceptionFormat "FULL"
    }
}

// integrationTest 태스크 (있으면 보강, 없으면 등록)
def existingItTask = tasks.findByName('integrationTest')
if (existingItTask) {
    tasks.named('integrationTest', Test).configure {
        testClassesDirs += sourceSets.integrationTest.output.classesDirs
        classpath += sourceSets.integrationTest.runtimeClasspath
        useJUnitPlatform()
        testLogging {
            events "FAILED", "SKIPPED"
            exceptionFormat "FULL"
        }
    }
} else {
    tasks.register('integrationTest', Test) {
        description = "Runs integration tests."
        group = "verification"
        testClassesDirs = sourceSets.integrationTest.output.classesDirs
        classpath = sourceSets.integrationTest.runtimeClasspath
        useJUnitPlatform()
        testLogging {
            events "FAILED", "SKIPPED"
            exceptionFormat "FULL"
        }
    }
}

// 패키징 설정
tasks.matching { it.name == 'bootJar' }.configureEach {
    enabled = false
}

tasks.named('jar') {
    enabled = true
}
