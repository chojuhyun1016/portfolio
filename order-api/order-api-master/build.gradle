// ======================================================================
// module: order-api-master / build.gradle
//  - REST Docs + Asciidoctor, 카탈로그 기반 의존성
// ======================================================================

plugins {
    alias(libs.plugins.springBoot)
    alias(libs.plugins.asciidoctor)
}

ext { snippetsDir = file("build/generated-snippets") }

configurations { asciidoctorExt }

dependencies {
    // 모듈
    implementation project(":order-common")
    implementation project(":order-core")
    implementation project(":order-domain")
    implementation project(":order-api:order-api-common")
    implementation project(":order-client:kafka")

    // Spring Boot
    implementation(libs.springBootStarterWeb)
    implementation(libs.springBootStarterDataJpa)
    implementation(libs.springBootStarterValidation)
    implementation(libs.springBootStarterActuator)
    implementation(libs.springBootStarterSecurity)

    // Kafka
    implementation(libs.springKafka)
    implementation(libs.awsMskIamAuth)

    // Querydsl
    implementation(libs.querydslCore)
    implementation(libs.querydslJpaJakarta)
    annotationProcessor(libs.querydslApt)

    // 로깅 / Jackson
    implementation(libs.logbackJsonClassic)
    implementation(libs.logbackJackson)
    implementation(libs.jacksonDatabind)

    // DB 런타임
    runtimeOnly(libs.h2)
    runtimeOnly(libs.awsMysqlJdbc)

    // 테스트(test)
    testImplementation(libs.springBootStarterTest)
    testImplementation(libs.springSecurityTest)

    // Mockito (BOM + core + junit-jupiter)  ← inline 제거
    testImplementation(platform(libs.mockitoBom))
    testImplementation(libs.mockitoCore)
    testImplementation(libs.mockitoJunitJupiter)

    // REST Docs
    testImplementation(libs.restdocsMockmvc)
    asciidoctorExt(libs.restdocsAsciidoctor)

    // 임베디드 Kafka 테스트
    testImplementation(libs.springKafkaTest)

    // 통합테스트 (integrationTest)
    integrationTestImplementation(platform(libs.mockitoBom))
    integrationTestImplementation(libs.mockitoCore)
    integrationTestImplementation(libs.mockitoJunitJupiter)
    // 필요 시:
    // integrationTestImplementation(libs.springSecurityTest)
    // integrationTestImplementation(libs.springKafkaTest)
}

tasks.withType(Test).configureEach { useJUnitPlatform() }

tasks.named("test", Test) {
    useJUnitPlatform { excludeTags "restdocs" }
}

tasks.register("rest", Test) {
    description = "Run only REST Docs tests (@Tag(\"restdocs\")) and generate snippets."
    group = "verification"
    testClassesDirs = sourceSets.test.output.classesDirs
    classpath = sourceSets.test.runtimeClasspath
    useJUnitPlatform { includeTags "restdocs" }
    systemProperty "org.springframework.restdocs.outputDir", snippetsDir
    outputs.dir snippetsDir
}

asciidoctor {
    configurations "asciidoctorExt"
    inputs.dir snippetsDir
    baseDirFollowsSourceFile()
    attributes(
            "snippets": snippetsDir,
            "doctype": "book",
            "sectanchors": true,
            "source-highlighter": "highlightjs"
    )
    dependsOn tasks.named("rest")
}

tasks.named("bootJar") {
    dependsOn tasks.named("asciidoctor")
    from("${layout.buildDirectory.get()}/docs/asciidoc/") { into "static/docs" }
}
