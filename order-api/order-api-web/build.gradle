// ======================================================================
// module: order-api-web / build.gradle
//  - Boot 웹 API 모듈 (+ Spring REST Docs 문서화)
//  - 모든 버전/의존성은 libs.versions.toml(버전 카탈로그) 기준
//  - Kafka, Querydsl(Jakarta), 보안/웹/JPA/검증, 로깅 포함
//  - REST Docs: test 또는 rest 태스크로 스니펫 생성
// ======================================================================

plugins {
    alias(libs.plugins.springBoot)
    alias(libs.plugins.asciidoctor)
}

ext {
    snippetsDir = file("build/generated-snippets")
}

/** REST Docs용 asciidoctor 확장 구성 */
configurations { asciidoctorExt }

dependencies {
    // --- 프로젝트 모듈 ---
    implementation project(":order-common")
    implementation project(":order-core")
    implementation project(":order-domain")
    implementation project(":order-api:order-api-common")
    implementation project(":order-client:kafka")

    // --- Spring Boot 스타터 ---
    implementation(libs.springBootStarterWeb)
    implementation(libs.springBootStarterDataJpa)
    implementation(libs.springBootStarterValidation)
    implementation(libs.springBootStarterActuator)
    implementation(libs.springBootStarterSecurity)

    // --- Kafka ---
    implementation(libs.springKafka)
    implementation(libs.awsMskIamAuth)

    // --- Querydsl (Jakarta) ---
    implementation(libs.querydslCore)
    implementation(libs.querydslJpaJakarta)
    annotationProcessor(libs.querydslApt)

    // --- 로깅 / Jackson ---
    implementation(libs.logbackJsonClassic)
    implementation(libs.logbackJackson)
    implementation(libs.jacksonDatabind)

    // --- DB 런타임 (RDS JDBC) ---
    runtimeOnly(libs.awsMysqlJdbc)

    // --- 테스트 공통 ---
    testImplementation(libs.springBootStarterTest)
    testImplementation(libs.springSecurityTest)

    // --- REST Docs (버전 카탈로그 사용) ---
    testImplementation(libs.restdocsMockmvc)
    asciidoctorExt(libs.restdocsAsciidoctor)
}

// 기본 test 태스크에서 스니펫을 생성
tasks.named("test", Test) {
    useJUnitPlatform()
    doFirst { snippetsDir.mkdirs() }
    systemProperty "org.springframework.restdocs.outputDir", snippetsDir
    outputs.dir snippetsDir
}

// REST Docs 전용 테스트(스니펫 생성) 태스크
tasks.register("rest", Test) {
    description = "Run only REST Docs tests (@Tag(\"restdocs\")) and generate snippets."
    group = "verification"
    useJUnitPlatform { includeTags "restdocs" }
    testClassesDirs = sourceSets.test.output.classesDirs
    classpath = sourceSets.test.runtimeClasspath
    doFirst { snippetsDir.mkdirs() }
    systemProperty "org.springframework.restdocs.outputDir", snippetsDir
    outputs.dir snippetsDir
}

// Asciidoctor 변환
asciidoctor {
    configurations "asciidoctorExt"
    inputs.dir(snippetsDir).withPropertyName("snippets").optional(true)
    baseDirFollowsSourceFile()
    attributes(
            "snippets": snippetsDir,
            "doctype": "book",
            "sectanchors": true,
            "source-highlighter": "highlightjs"
    )
    dependsOn("test", "rest")
    onlyIf { snippetsDir.exists() && snippetsDir.listFiles()?.length > 0 }
}

// 문서 Boot JAR 포함 (static/docs)
tasks.named("bootJar") {
    dependsOn tasks.named("asciidoctor")
    from("${asciidoctor.outputDir}/") { into "static/docs" }
}
