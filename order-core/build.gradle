plugins {
    id "java-library"
}

java {
    toolchain { languageVersion = JavaLanguageVersion.of(17) }
    withSourcesJar()
    withJavadocJar()
}

tasks.named("jar") { enabled = true }

dependencies {
    // 내부 모듈
    api(project(":order-common"))
    implementation(project(":order-domain"))

    // Spring (웹 제외)
    implementation(libs.springBootStarter)
    implementation(libs.springBootStarterAop)
    implementation(libs.springBootStarterJdbc)
    implementation(libs.springBootStarterDataJpa)
    implementation(libs.springBootStarterValidation)
    implementation(libs.springBootStarterSecurity) // BCrypt 등

    // Spring Cloud Gateway
    implementation(libs.springCloudGateway)

    // DB 드라이버 (런타임만)
    runtimeOnly(libs.mysqlDriver)
    runtimeOnly(libs.awsMysqlJdbc)

    // Redis / 풀
    implementation(libs.commonsPool2)
    implementation(libs.redisson)

    // Lettuce (직접 사용)
    implementation(libs.lettuce)

    // AWS SDK v2
    implementation(platform(libs.awsBomV2))
    implementation(libs.awsSecretsManager)
    implementation(libs.awsAuth)
    implementation(libs.awsRegions)

    // AWS DynamoDB (Enhanced)
    implementation(libs.awsDynamodb)
    implementation(libs.awsDynamodbEnhanced)

    // QueryDSL (Jakarta)
    implementation(libs.querydslCore)
    implementation("${libs.querydslJpaJakarta.get().module}:${libs.querydslJpaJakarta.get().version}:jakarta")
    annotationProcessor("${libs.querydslAptJakarta.get().module}:${libs.querydslAptJakarta.get().version}:jakarta")
    annotationProcessor(libs.jakartaPersistenceApi)
    annotationProcessor(libs.jakartaAnnotationApi)

    // 기타 유틸
    implementation(libs.jacksonJsr310)
    implementation(libs.tsid)
    implementation(libs.guava)
    compileOnly(libs.jakartaServlet)
    compileOnly(libs.lombok)
    annotationProcessor(libs.lombok)

    // Argon2 / JWT
    implementation(libs.argon2)
    implementation(libs.jjwtApi)
    runtimeOnly(libs.jjwtImpl)
    runtimeOnly(libs.jjwtJackson)

    // Testcontainers (GenericContainer 등)
    testImplementation(platform(libs.testcontainersBom))
    testImplementation(libs.testcontainers)
    testImplementation(libs.testcontainersJunit)
    testImplementation(libs.testcontainersRedis)
    testImplementation(libs.springBootStarterTest)
}
